# Endpoint for the access node to query for events
FLOW_ACCESS_NODE="https://access-mainnet-beta.onflow.org"
# Maximum number of requests pser second to make to the Flow API
MAX_FLOW_REQUESTS_PER_SECOND=10
# Cadence event types to monitor for. Separate multiple values with a comma
CADENCE_EVENT_TYPES="A.c1e4f4f4c4257510.TopShotMarketV3.MomentListed,A.c1e4f4f4c4257510.TopShotMarketV3.MomentPurchased,A.c1e4f4f4c4257510.TopShotMarketV3.MomentWithdrawn"
# block height to start scanning for events, only used if there is on previous value stored in the settings (leave empty to start at latest block height)
#DEFAULT_START_BLOCK_HEIGHT=

# Logger settings
# Log format: "pretty", "json", "hidden"
#APP_LOG_TYPE="json"
# Log level: "debug", "info", "warn", "error"
#APP_LOG_LEVEL="error"

# AWS credentials if using AWS services
#AWS_ACCESS_KEY_ID=
#AWS_SECRET_ACCESS_KEY=
#AWS_REGION=
#AWS_USE_IAM=false

# Database credentials if using a database provider
#DB_HOST=
#DB_PORT=
#DB_USER=
#DB_PASSWORD=
#DB_AWS_CREDENTIALS_SECRET_NAME=
#DB_DATABASE=
#DB_USE_SSL=false

# --- Begin Settings Provider Config (only enable one section below) ---

# Store settings in memory (will not persist across application executions). This is the default if a different provider is not configured
#SETTINGS_PROVIDER="memory"

# Store settings in sqlite database
#SETTINGS_PROVIDER="sqlite"
# Path to SQLite file to use for settings. Required tables will be created automatically
#SQLITE_SETTINGS_FILE="./data/settings.sqlite3"

# Store settings in database (must provide database credentials above)
#SETTINGS_PROVIDER="db"
# Database table to store settings in. This must be created manually, see docs for schema
#DB_SETTINGS_TABLE_NAME="settings"

# --- End Settings Provider Config ---

# --- Begin Event Broadcaster Config (you may enable more than one section below) ---

# Configure SQS Queue URL to receive events
#SQS_EVENT_BROADCASTER_QUEUE_URL=""
# Message group ID to use for deduplication. Leave blank for default "flow-scanner-events"
#SQS_EVENT_BROADCASTER_MESSAGE_GROUP_ID=

# Configure SNS Topic ARN to receive events
#SNS_EVENT_BROADCASTER_TOPIC_ARN=""
# Message group ID to use for deduplication. Leave blank for default "flow-scanner-events"
#SNS_EVENT_BROADCASTER_MESSAGE_GROUP_ID=

# Configure http endpoint to receive events
#HTTP_EVENT_BROADCASTER_ENDPOINT=""
# Shared secret to use for HMAC-SHA512 payload signing for HTTP event broadcaster. Leave blank for unsigned payload
#HTTP_EVENT_BROADCASTER_SHARED_SECRET="secret"
# Configure SQLite unique checker if using HTTP event broadcaster. Required tables will be created automatically
#SQLITE_UNIQUE_CHECKER_FILE="./data/unique.sqlite"
# Configure database unique checker if using HTTP event broadcaster (must define database credentials above). This is the table that will be used to store data. This must be created manually, see docs for schema
#DB_UNIQUE_CHECKER_TABLE_NAME="unique_checker"
# Define a group ID (a string up to 16 characters in length) to make the unique checks specific to this instance. All keys will only be unique within the same group ID
#UNIQUE_CHECKER_GROUP_ID=

# --- End Event Broadcaster Config ---

# --- Begin CloudWatch Metrics Config ---

# Enable CloudWatch metrics
#METRICS_PROVIDER="cloudwatch"
# Namespace to use for CloudWatch metrics
#CLOUDWATCH_METRICS_NAMESPACE="FlowScanner"
# Environment to use for CloudWatch metrics
#CLOUDWATCH_METRICS_ENV="Dev"

# --- End CloudWatch Metrics Config ---
